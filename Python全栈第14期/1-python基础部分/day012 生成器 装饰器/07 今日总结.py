# -*- coding:utf-8 -*-
'''
@Author  : Python
@Time    : 2019/1/14 17:13
@Software: PyCharm
@File    : 04 今日总结.py
'''

# 1.装饰器: 本质就是闭包
# 开放封闭原则
# 扩展开发,修改源代码封闭,不能修改调用方式
# 在不该源代码的基础上添加功能
# @装饰器的名字   在被装饰的函数正上方　　独占一行
# @语法糖  被装饰的函数名 = 装饰器的名字(被装饰的函数名)


# 2.内置函数:

# lambda  匿名函数:
# lambda 参数:返回值
# 匿名函数没有名字,怎么查看  函数.__name__
# 匿名函数的返回值只能是一个,不能是多个
# 匿名函数可不可以写到一行
# print((lambda x:x)()) 调用的时候要传参
# sorted() 内置函数

# 排序的函数:
# sorted('可迭代对象',key='函数名(函数名里写排序规则),reverse=True的时候是降序')

# filter() 内置函数(筛选函数|过滤函数)

# filter('写好过滤规则的函数','可迭代对象')   函数可以是匿名,也可以是定义好的

# map() 映射函数
# 可以快速将多个元素相同的可迭代对象,进行上下累加　　返回的是一个数据

# zip() #拉链
# 返回的是对个，如果有三个可迭代对象，就按照最短的进行输出

# reduce() 累 计算
# 快速求一个可迭代对象的累计算

# enumerate() #枚举  将可迭代对象放到里边,默认数字是0开始,自己指定开始的数字

# print(round(4.44))  # 四舍五入

# 今天内容很多
# 对不起,上周作业,
# 递归 明天讲 (不要深扣)
# 面试题