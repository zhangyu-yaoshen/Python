一. 昨日内容回顾
    1. 函数: 对功能或者动作的封装
        定义:
            def 函数名(参数列表):
                函数体(return)
        调用:
            ret = 函数名(实参列表)
        函数名就是变量名.
        函数名的命名规则: 变量的命名规则;
            1. 数字, 字母, 下划线组成
            2. 不能数字开头, 更不能是纯数字
            3. 不能用关键字
            4. 不要用中文
            5. 不要太长
            6. 要有意义
            7. 区分大小写
            8. 建议使用驼峰或者下划线

    函数的返回值:函数结束执行之后给调用方的结果
        return: 只要函数运行到了return. 函数立即停止执行
        1. 不写return. 默认返回None
        2. 写了return 后面不跟值
        3. return 值  返回一个结果
        4. return 值, 值, 值, 值  返回多个结果. 返回的是元组

    函数的参数:
        1. 形参: 在函数定义的地方的变量
            1. 位置参数
            2. 默认值参数
        2. 实参: 在函数调用的地方给函数传递的具体的值
            1. 位置参数
            2. 关键字参数
            3. 混合参数 先位置. 后关键字
        3. 传参: 把实参赋值给形参的过程叫传参

二. 作业讲解
三. 今日主要内容
    1. 动态传参
        形参:
            1. 位置参数
            2. 默认值参数
            3. 动态传参
                *args 动态接收位置参数
                **kwargs 动态接收关键字参数
                def func(*args, **kwargs):
                在形参上用*,** 表示聚合. 实参表示打散

                顺序:
                    位置 *args 默认值 **kwargs

    2. 作用域
        名称空间:
            1. 内置
            2. 全局
            3. 局部

            作用域:
            1. 全局作用域: 内置+全局
            2. 局部作用域: 局部

            globals() 查看全局作用域中的内容
            locals()  查看当前作用域中的内容

    3. global nonlocal
        global:  在局部引入全局变量
        nonlocal:  在局部, 引入离他最近的那一层的变量

    复习:
        平时作业 + 课上代码
    预习:
        1. 函数名的应用.
        2. 闭包.
        3. 迭代器.