一. 昨日内容回顾
    1. 面向对象和面向过程
        1. 面向过程: 侧重在过程. 事物的发展流程
            优点: 编码和入门简单.
            缺点: 可扩展性差.

        2. 面向对象: 侧重在对象. 万事万物皆为对象. None
            优点: 可扩展性强(多态)
            缺点: 上手难. 写起来麻烦

        在python中支持面向对象和面向过程. 使用哪一个你自己决定.

    2. 如何写面向对象
        1. 先创建类
            class 类名:
                pass
        2. 创建对象:
            类名()
        3. () 调用的是__init__() 构造方法.
            def __init__(self, 参数1,参数2, 参数3):
                # 属性的绑定
                self.属性1 = 参数1
                self.属性2 = 参数2
                self.属性3 = 参数3
        4. 方法(写在类中的函数)
            def method(self):
                pass
            self: 当前正在执行的对象
            对象.method()
    3. 三大特征:
        封装: 把一些数据封装到一个对象中.
        继承: 子类继承父类. 子类会自动拥有父类中除了私有内容外的其他所有内容, python是多继承.
        多态: 多一个对象有多种形态


二. 作业讲解

三. 今天主要内容
    成员
        class Person:
            def __init__(self, name, num, gender, birthday):
                # 成员变量(实例变量)
                self.name = name
                self.num = num
                self.gender = gender
                self.birthday = birthday

            # 对象来访问（成员方法）（实例方法）
            def marray(self, duifang):
                print("人会结婚%s" % duifang)

            成员： 在类中定义的变量和方法都被成为成员

        变量
            1. 成员变量（实例变量）(字段column) (重点)
            2. 类变量(静态变量) 直接写在类中的. 共享出去的.
        方法
            1. 成员(实例)方法 加了self的.调用的时候。必须用对象去访问. (重点)
            2. 类方法, 当方法需要传递类名的时候. 需要类方法. 规范规则: 在上方加@classmethod
            3. 静态方法, 当你的方法不需要传递当前类的对象的时候。 语法规则:在方法上面加@staticmethod

            面试题: 说一说, 静态方法, 类方法和实例方法的区别.

        属性
            用方法来描述我们的属性信息.
            注意:
                1. @propery 改变一个方法成为属性
                2. 这个方法只能有一个参数, self
                3. 必须有返回值.

    私有
        只能在自己类中访问.

        __方法
        __变量
        __类变量
        都是私有. 比人访问不到. 包括他儿子.

    明天:
        类与类的关系. 组合, 嵌套, 调用. 继承.