一. 上节课内容回顾
    1. 函数: 对功能或者动作的封装
        定义:
            def 函数名(形参列表):
               函数体(return)
            调用:
                函数名(实参列表)
            形参: 在函数声明的位置写的变量
                1. 位置参数
                2. 默认值参数
                3. 动态传参:
                    1. *args 位置参数的动态传参, 接收的是元组
                    2. **kwargs 关键字的动态传参, 接收的是字典
                    *和** 在形参表示聚合, 在实参表示打散
            实参: 在函数调用的时候给形参传递的值
                1. 位置参数
                2. 关键字参数
                3. 混合参数
            传参: 把实参传递给形参的过程

            返回值:
                1. 不写return或者只写return return None
                2. return 值 返回一个值
                3. return 值1, 值2, 值3. 返回多个值. 元组

            名称空间:
                1. 内置名称空间. python解释器提供的内置的东西
                2. 全局名称空间. 全局变量. 全局函数
                3. 局部名称空间. 局部变量. 在函数内部

            作用域:
                1. 全局作用域
                2. 局部作用域

            globals() 查看全局作用域中的内容
            locals() 查看当前作用域中的内容

            global 把全局变量引入进来
            nonlocal 在局部, 把离他最近的上一层的变量引入进来

二. 作业讲解
三. 今日主要内容
    1. 函数名第一类对象
        函数名其实就是变量名
        1. 可以像变量一样互相赋值.
        2. 可以作为函数的参数,进行传递
        3. 可以作为返回值返回
        4. 可以作为集合的元素进行存储

    2. 闭包(函数的嵌套. 返回函数名)
        作用:
            1. 保护变量
            2. 常驻内存
        基本写法
            def outer():
                a = 10
                def inner():
                    return a
                return inner

    3. 迭代器(用)
        1. Iterable:  可迭代的.里面有__iter__()
        2. Iterator:  迭代器. 里面有__iter__() 还有 __next__()

        特点:
            1. 节省内存(欠)
            2. 惰性机制(只有执行__next__()才会取值)
            3. 只能向前. 不能反复

        dir() 查看数据可以执行的方法
        isinstance() 判断xxx对象是否是xxx类型

        for循环的内部用的是迭代器
        lst = [1, 2, 3]
        it = lst.__iter__().__next__()
        while 1:
            try:
                it.__next__()
            except StopIteration:
                break

    预习:
        1. 生成器函数
        2. 推导式
        3. 生成器表达式